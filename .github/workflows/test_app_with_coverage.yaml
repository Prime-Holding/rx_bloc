name: "Test App with coverage"

on:
  workflow_call:
    inputs:
      project_path:
        type: string
        default: ''
        required: false
        description: 'The location of the flutter project within the repository'
      min_coverage:
        type: number
        default: 100
        required: false
        description: 'The min coverage that the app has to reach'

jobs:
  test_app_with_coverage:
    defaults:
      run:
        working-directory: ${{ inputs.project_path }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}
      - run: dart --version
      - run: flutter --version
      - name: Install Dependencies
        run: |
          flutter clean
          flutter pub get
      - name: Analyze
        run: flutter analyze lib
      - name: Run tests
        run: |
          if [ -d "test" ]; then
            flutter test --coverage --exclude-tags=not-tests
          fi
      - name: Format coverage
        run: dart run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib
      - name: Remove unnecessary files
        id: test_coverage_file
        run: |
          flutter pub run clean_coverage clean --exclusions '**/.g.dart','**repository.dart','**rxb.g.dart' coverage/lcov.info
          if [ -s "coverage/lcov.info" ]; then 
            echo "result=true" >> $GITHUB_OUTPUT ; 
          else 
            echo "result=false" >> $GITHUB_OUTPUT ; 
          fi
      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        if: steps.test_coverage_file.outputs.result == 'true'
        with:
          path: "/coverage/lcov.info"
          min_coverage: ${{ inputs.min_coverage }}
