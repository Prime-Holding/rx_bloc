name: "Test App with coverage"

# Define events when this workflow is triggered
on:
  push:
    paths:
      - ".github/workflows/test_app_with_coverage.yaml"
      - "examples/booking_app"
      
  pull_request:
    paths:
      - ".github/workflows/test_app_with_coverage.yaml"
      - "examples/booking_app"

# Define local variables 
env:
  PROJECT_PATH : "examples/booking_app"
  APP_MIN_COVERAGE : 55

# Define a list of jobs that will be executed with this workflow
jobs:
  test_app_with_coverage:
    defaults:
      run:
        working-directory: ${{ env.PROJECT_PATH }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}
      - run: dart --version
      - run: flutter --version
      - name: Install Dependencies
        run: |
          flutter clean
          flutter pub get
      - name: Analyze
        run: flutter analyze lib
      - name: Run tests
        run: |
          if [ -d "test" ]; then
            flutter test --coverage --exclude-tags=not-tests
          fi
      - name: Format coverage
        run: dart run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib
      - name: Remove unnecessary files
        id: test_coverage_file
        run: |
          flutter pub run clean_coverage clean --exclusions '**/.g.dart','**repository.dart','**rxb.g.dart' coverage/lcov.info
          if [ -s "/coverage/lcov.info" ]; then 
            echo "result=true" >> $GITHUB_OUTPUT ; 
          else 
            echo "result=false" >> $GITHUB_OUTPUT ; 
          fi
      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        if: steps.test_coverage_file.outputs.result == 'true'
        with:
          path: "/coverage/lcov.info"
          min_coverage: ${{ env.APP_MIN_COVERAGE }}
