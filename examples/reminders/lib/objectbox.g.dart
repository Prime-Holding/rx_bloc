// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_sync_flutter_libs/objectbox_sync_flutter_libs.dart';

import 'base/dtos/reminders/objectbox_reminder_dto.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 1820080033981456874),
      name: 'ObjectBoxCloudReminderDto',
      lastPropertyId: const obx_int.IdUid(5, 3200328750183837706),
      flags: 2,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8097343415769463250),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3270877135597773674),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6371859639148190778),
            name: 'dueDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4952221806357349816),
            name: 'complete',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3200328750183837706),
            name: 'authorId',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 8693197910392018048),
      name: 'ObjectBoxLocalReminderDto',
      lastPropertyId: const obx_int.IdUid(5, 4144894361085433226),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4454131031970074258),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5332639071330998638),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5024534990894498485),
            name: 'dueDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6524212138025143376),
            name: 'complete',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4144894361085433226),
            name: 'authorId',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(6, 8693197910392018048),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        217604861506774670,
        5391355009466500501,
        5073431356059942661,
        3923103457451115400
      ],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        9044997310280387411,
        7862380796342668515,
        1379986186485444629,
        3913887326474151076,
        623597227337345809,
        362902408654422340,
        7277086295908921187,
        4260034986858794501,
        810987864531314114,
        605667092754544549,
        3264164221219498885,
        2479015550200532785,
        7229521080410726369,
        8361210094754472464,
        727637531375526485,
        7142258782237825573,
        7466992192639670698,
        8491232530041573340,
        3444953711556838306,
        8636039410795037220,
        7632441692695815371,
        1279393594948312301,
        3404449034033841616,
        2903017206342281118,
        184902116288926108,
        8389151137202961090,
        5879576617382375813,
        8826805672823262198,
        7107527801219823654
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ObjectBoxCloudReminderDto:
        obx_int.EntityDefinition<ObjectBoxCloudReminderDto>(
            model: _entities[0],
            toOneRelations: (ObjectBoxCloudReminderDto object) => [],
            toManyRelations: (ObjectBoxCloudReminderDto object) => {},
            getId: (ObjectBoxCloudReminderDto object) => object.id,
            setId: (ObjectBoxCloudReminderDto object, int id) {
              object.id = id;
            },
            objectToFB: (ObjectBoxCloudReminderDto object, fb.Builder fbb) {
              final titleOffset = fbb.writeString(object.title);
              final authorIdOffset = object.authorId == null
                  ? null
                  : fbb.writeString(object.authorId!);
              fbb.startTable(6);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, titleOffset);
              fbb.addInt64(2, object.dueDate.millisecondsSinceEpoch);
              fbb.addBool(3, object.complete);
              fbb.addOffset(4, authorIdOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final titleParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final dueDateParam = DateTime.fromMillisecondsSinceEpoch(
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
              final completeParam = const fb.BoolReader()
                  .vTableGet(buffer, rootOffset, 10, false);
              final authorIdParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGetNullable(buffer, rootOffset, 12);
              final object = ObjectBoxCloudReminderDto(
                  id: idParam,
                  title: titleParam,
                  dueDate: dueDateParam,
                  complete: completeParam,
                  authorId: authorIdParam);

              return object;
            }),
    ObjectBoxLocalReminderDto:
        obx_int.EntityDefinition<ObjectBoxLocalReminderDto>(
            model: _entities[1],
            toOneRelations: (ObjectBoxLocalReminderDto object) => [],
            toManyRelations: (ObjectBoxLocalReminderDto object) => {},
            getId: (ObjectBoxLocalReminderDto object) => object.id,
            setId: (ObjectBoxLocalReminderDto object, int id) {
              object.id = id;
            },
            objectToFB: (ObjectBoxLocalReminderDto object, fb.Builder fbb) {
              final titleOffset = fbb.writeString(object.title);
              final authorIdOffset = object.authorId == null
                  ? null
                  : fbb.writeString(object.authorId!);
              fbb.startTable(6);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, titleOffset);
              fbb.addInt64(2, object.dueDate.millisecondsSinceEpoch);
              fbb.addBool(3, object.complete);
              fbb.addOffset(4, authorIdOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final titleParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final dueDateParam = DateTime.fromMillisecondsSinceEpoch(
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
              final completeParam = const fb.BoolReader()
                  .vTableGet(buffer, rootOffset, 10, false);
              final authorIdParam =
                  const fb.StringReader(asciiOptimization: true)
                      .vTableGetNullable(buffer, rootOffset, 12);
              final object = ObjectBoxLocalReminderDto(
                  id: idParam,
                  title: titleParam,
                  dueDate: dueDateParam,
                  complete: completeParam,
                  authorId: authorIdParam);

              return object;
            })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ObjectBoxCloudReminderDto] entity fields to define ObjectBox queries.
class ObjectBoxCloudReminderDto_ {
  /// See [ObjectBoxCloudReminderDto.id].
  static final id = obx.QueryIntegerProperty<ObjectBoxCloudReminderDto>(
      _entities[0].properties[0]);

  /// See [ObjectBoxCloudReminderDto.title].
  static final title = obx.QueryStringProperty<ObjectBoxCloudReminderDto>(
      _entities[0].properties[1]);

  /// See [ObjectBoxCloudReminderDto.dueDate].
  static final dueDate = obx.QueryDateProperty<ObjectBoxCloudReminderDto>(
      _entities[0].properties[2]);

  /// See [ObjectBoxCloudReminderDto.complete].
  static final complete = obx.QueryBooleanProperty<ObjectBoxCloudReminderDto>(
      _entities[0].properties[3]);

  /// See [ObjectBoxCloudReminderDto.authorId].
  static final authorId = obx.QueryStringProperty<ObjectBoxCloudReminderDto>(
      _entities[0].properties[4]);
}

/// [ObjectBoxLocalReminderDto] entity fields to define ObjectBox queries.
class ObjectBoxLocalReminderDto_ {
  /// See [ObjectBoxLocalReminderDto.id].
  static final id = obx.QueryIntegerProperty<ObjectBoxLocalReminderDto>(
      _entities[1].properties[0]);

  /// See [ObjectBoxLocalReminderDto.title].
  static final title = obx.QueryStringProperty<ObjectBoxLocalReminderDto>(
      _entities[1].properties[1]);

  /// See [ObjectBoxLocalReminderDto.dueDate].
  static final dueDate = obx.QueryDateProperty<ObjectBoxLocalReminderDto>(
      _entities[1].properties[2]);

  /// See [ObjectBoxLocalReminderDto.complete].
  static final complete = obx.QueryBooleanProperty<ObjectBoxLocalReminderDto>(
      _entities[1].properties[3]);

  /// See [ObjectBoxLocalReminderDto.authorId].
  static final authorId = obx.QueryStringProperty<ObjectBoxLocalReminderDto>(
      _entities[1].properties[4]);
}
