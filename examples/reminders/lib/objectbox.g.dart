// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_sync_flutter_libs/objectbox_sync_flutter_libs.dart';

import 'base/models/reminder/reminder_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 5391355009466500501),
      name: 'ObjectBoxReminderModel',
      lastPropertyId: const obx_int.IdUid(16, 7466992192639670698),
      flags: 2,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 7229521080410726369),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 8361210094754472464),
            name: 'dueDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 727637531375526485),
            name: 'complete',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 7142258782237825573),
            name: 'authorId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 7466992192639670698),
            name: 'index',
            type: 6,
            flags: 1)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 5391355009466500501),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [217604861506774670],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        9044997310280387411,
        7862380796342668515,
        1379986186485444629,
        3913887326474151076,
        623597227337345809,
        362902408654422340,
        7277086295908921187,
        4260034986858794501,
        810987864531314114,
        605667092754544549,
        3264164221219498885,
        2479015550200532785
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ObjectBoxReminderModel: obx_int.EntityDefinition<ObjectBoxReminderModel>(
        model: _entities[0],
        toOneRelations: (ObjectBoxReminderModel object) => [],
        toManyRelations: (ObjectBoxReminderModel object) => {},
        getId: (ObjectBoxReminderModel object) => object.index,
        setId: (ObjectBoxReminderModel object, int id) {
          object.index = id;
        },
        objectToFB: (ObjectBoxReminderModel object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final authorIdOffset = object.authorId == null
              ? null
              : fbb.writeString(object.authorId!);
          fbb.startTable(17);
          fbb.addOffset(11, titleOffset);
          fbb.addInt64(12, object.dueDate.millisecondsSinceEpoch);
          fbb.addBool(13, object.complete);
          fbb.addOffset(14, authorIdOffset);
          fbb.addInt64(15, object.index);
          fbb.finish(fbb.endTable());
          return object.index;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final indexParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 34, 0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final dueDateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0));
          final completeParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 30, false);
          final authorIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 32);
          final object = ObjectBoxReminderModel(
              index: indexParam,
              title: titleParam,
              dueDate: dueDateParam,
              complete: completeParam,
              authorId: authorIdParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ObjectBoxReminderModel] entity fields to define ObjectBox queries.
class ObjectBoxReminderModel_ {
  /// See [ObjectBoxReminderModel.title].
  static final title = obx.QueryStringProperty<ObjectBoxReminderModel>(
      _entities[0].properties[0]);

  /// See [ObjectBoxReminderModel.dueDate].
  static final dueDate =
      obx.QueryDateProperty<ObjectBoxReminderModel>(_entities[0].properties[1]);

  /// See [ObjectBoxReminderModel.complete].
  static final complete = obx.QueryBooleanProperty<ObjectBoxReminderModel>(
      _entities[0].properties[2]);

  /// See [ObjectBoxReminderModel.authorId].
  static final authorId = obx.QueryStringProperty<ObjectBoxReminderModel>(
      _entities[0].properties[3]);

  /// See [ObjectBoxReminderModel.index].
  static final index = obx.QueryIntegerProperty<ObjectBoxReminderModel>(
      _entities[0].properties[4]);
}
