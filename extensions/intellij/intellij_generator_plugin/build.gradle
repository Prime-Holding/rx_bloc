plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.2'
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version '1.0.1'

}

group 'com.rx_bloc'
version '3.0.3'


apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

//sourceCompatibility = 1.8
//targetCompatibility = 1.8

intellij {
    version '2017.3'
    updateSinceUntilBuild false
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testCompile "org.mockito:mockito-core:2.7.5"

    implementation "com.fleshgrinder.kotlin:case-format:0.2.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

patchPluginXml {
    changeNotes """
     <ul>
     <li>
     v.3.0.3 - Fix incompatibility issues with Android Studio Giraffe
     </li>
      <li>
     v.3.0.2 - separate state mock initialization
     </li>
     <li>
     v.3.0.1 - fix imports for features created in sub-folder
     </li>
     <li>v3.0.0 
        <br /> - detecting user selected folder/item so the bootstrap (RxBloc Tests) menu item is optionally visible. 
        <br /> - skip the feature/lib selection - when features are selected and directly generate tests
        <br /> - improve a little bit more the imports in the tests
        <br />
        <br /> - added in create feature dialog - a combo box for choosing Routing Solution (Go Route, Auto Route, or None) 
        <br /> - replace extensions with service when checkbox is On
        <br /> - remove null safety checkbox
    </li>
       <li>v2.1.0 
        <br /> - Allow scanning lib\\src folder for features and libs
        <br /> - improved imports in the generated tests
        <br /> - fix auto-wrap freeze
       </li>
        <li>v2.0.0 
        <br /> - Added Boostrap Test Generator in the project menu that outputs
        <br /> - bootstraped unit test for the bloc 
        <br /> - factory of the page associated with the bloc
        <br /> - code for mocking the bloc states
        <br /> - template for creating golden tests with the most common use cases - empty result, error, loading, success</li>
        
        <li>v1.5.0 
        <br /> - Updated DI Dependencies to not be a singleton</li>
        <br /> - Added an improvement to the - Wrap With Quick Action Support - 
        to analyze, filter and display a choose BloC states dialog - based on the file names and path - by the convension:
         <br /> feature_xx
         <br />   -- bloc / xx_bloc.dart  
         <br />   -- di
         <br />   -- views / xx_page.dart
         <br /> Filters:
         <br /> - RxResultBuilder - filters states with Result
         <br /> - RxPaginatedBuilder - filters states with PaginatedList
         <br /> - RxTextFormFieldBuilder - filters states that are string
         
        <li>v1.4.0 
        <br /> - Introduce "New -> RxBloc List".  
        <br /> - Wrap With Quick Action Support (RxBlocBuilder, RxResultBuilder, RxPaginatedBuilder, RxBlocListener, RxFormFieldBuilder, RxTextFormFieldBuilder). 
        </li>
        <li>v1.3.0 - Added option for creating an entire feature that includes bloc, page and dependency inhection</li>
        <li>v1.2.0 - Added option for creating Null Safety BloC claseses</li>
        <li>v1.1.0 - Added option for creating BloC extensions</li>
        <li>v1.0.0 - Initial release</li>
     </ul>
      """
}