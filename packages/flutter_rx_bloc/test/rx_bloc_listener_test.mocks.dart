// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_rx_bloc/test/rx_bloc_listener_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/widgets.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

import 'rx_bloc_listener_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CallbackFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallbackFunctions extends _i1.Mock implements _i2.CallbackFunctions {
  MockCallbackFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onString(
    _i3.BuildContext? context,
    String? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onString,
          [
            context,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onWaiting(
    _i3.BuildContext? context,
    String? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onWaiting,
          [
            context,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onComplete(_i3.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #onComplete,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    _i3.BuildContext? context,
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            context,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
