// Mocks generated by Mockito 5.4.2 from annotations
// in rx_bloc_cli/test/models/readers/non_interactive_arguments_reader_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:args/src/arg_results.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ArgResults].
///
/// See the documentation for Mockito's code generation for more information.
class MockArgResults extends _i1.Mock implements _i2.ArgResults {
  @override
  List<String> get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  List<String> get arguments => (super.noSuchMethod(
        Invocation.getter(#arguments),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  Iterable<String> get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as Iterable<String>);

  @override
  dynamic operator [](String? name) => super.noSuchMethod(
        Invocation.method(
          #[],
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool wasParsed(String? name) => (super.noSuchMethod(
        Invocation.method(
          #wasParsed,
          [name],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
